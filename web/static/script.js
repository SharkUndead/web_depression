document.addEventListener('DOMContentLoaded', function() {
    // --- KHAI B√ÅO BI·∫æN ---
    const predictForm = document.getElementById('predict-form');
    const indexForms = document.querySelectorAll('.index-form'); 
    
    const resultBox = document.getElementById('result-box');
    const resultTitle = document.getElementById('result-title');
    const resultContent = document.getElementById('result-content');

    // <<<<<<<<<<<<<<<< THAY ƒê·ªîI LOGIC M·ªöI ·ªû ƒê√ÇY >>>>>>>>>>>>>>>>

    // 1. T·∫°o m·ªôt ƒë·ªëi t∆∞·ª£ng ƒë·ªÉ l∆∞u tr·ªØ k·∫øt qu·∫£ cho t·ª´ng tab
    const tabResults = {};

    // 2. L·∫•y t·∫•t c·∫£ c√°c n√∫t b·∫•m chuy·ªÉn tab
    const tabTriggers = document.querySelectorAll('#mainTab button[data-bs-toggle="tab"]');

    // H√†m ƒë·ªÉ ·∫©n v√† x√≥a n·ªôi dung h·ªôp k·∫øt qu·∫£
    function hideResultBox() {
        if (resultBox) {
            resultBox.style.display = 'none';
            resultTitle.innerText = '';
            resultContent.innerHTML = '';
        }
    }

    // 3. G√°n s·ª± ki·ªán cho m·ªói n√∫t tab
    tabTriggers.forEach(triggerEl => {
        // L·∫Øng nghe s·ª± ki·ªán 'shown.bs.tab' c·ªßa Bootstrap
        triggerEl.addEventListener('shown.bs.tab', function (event) {
            // event.target l√† n√∫t tab v·ª´a ƒë∆∞·ª£c k√≠ch ho·∫°t
            // L·∫•y ID c·ªßa pane n·ªôi dung t∆∞∆°ng ·ª©ng (v√≠ d·ª•: 'predict-pane')
            const newTabId = event.target.getAttribute('data-bs-target').substring(1);
            
            // Ki·ªÉm tra xem c√≥ k·∫øt qu·∫£ n√†o ƒë∆∞·ª£c l∆∞u cho tab n√†y kh√¥ng
            const storedResult = tabResults[newTabId];

            if (storedResult) {
                // N·∫øu c√≥, hi·ªÉn th·ªã l·∫°i k·∫øt qu·∫£ ƒë√£ l∆∞u
                resultBox.style.display = 'block';
                resultBox.className = storedResult.className;
                resultTitle.innerHTML = storedResult.title;
                resultContent.innerHTML = storedResult.content;
            } else {
                // N·∫øu kh√¥ng c√≥, ·∫©n h·ªôp k·∫øt qu·∫£ ƒëi
                hideResultBox();
            }
        });
    });

    // --- X·ª¨ L√ù S·ª∞ KI·ªÜN FORM (Gi·ªØ nguy√™n) ---
    if (predictForm) {
        predictForm.addEventListener('submit', function(event) {
            event.preventDefault();
            const data = Object.fromEntries(new FormData(predictForm).entries());
            handleRequest('/predict', data, 'ƒêang d·ª± ƒëo√°n...', displayPredictionResult);
        });
    }

    if (indexForms) {
        indexForms.forEach(form => {
            form.addEventListener('submit', function(event) {
                event.preventDefault();
                const category = form.dataset.category;
                const formData = new FormData(form);
                const data = Object.fromEntries(formData.entries());
                data.category = category;
                
                handleRequest('/calculate_index', data, 'ƒêang t√≠nh to√°n...', displayIndexResult);
            });
        });
    }

    // --- C√ÅC H√ÄM TI·ªÜN √çCH ---
    function handleRequest(url, data, loadingMessage, callback) {
        showLoading(loadingMessage);
        // X√°c ƒë·ªãnh tab n√†o ƒëang active ƒë·ªÉ l∆∞u k·∫øt qu·∫£ ƒë√∫ng ch·ªó
        const activeTabPaneId = document.querySelector('.tab-pane.active').id;

        fetch(url, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data),
        })
        .then(response => response.json())
        .then(result => {
            if (result.error) {
                displayError(result.error);
            } else {
                // Truy·ªÅn ID c·ªßa tab active v√†o h√†m callback
                callback(result, activeTabPaneId);
            }
        })
        .catch(error => {
            console.error('Error:', error);
            displayError('C√≥ l·ªói x·∫£y ra khi k·∫øt n·ªëi ƒë·∫øn m√°y ch·ªß.');
        });
    }

    function showLoading(message) {
        resultBox.style.display = 'block';
        resultBox.className = 'result-box alert alert-info';
        resultTitle.innerText = message;
        resultContent.innerHTML = 'Vui l√≤ng ch·ªù trong gi√¢y l√°t.';
    }

    function displayError(errorMessage) {
        resultBox.style.display = 'block';
        resultBox.className = 'result-box alert alert-warning';
        resultTitle.innerText = 'L·ªói';
        resultContent.innerText = errorMessage;
    }

    function displayPredictionResult(result, tabId) {
        let className, title, adviceHtml = '';

        if (result.prediction === 1) {
            className = 'result-box alert alert-danger';
            title = '‚ö†Ô∏è C√≥ d·∫•u hi·ªáu TR·∫¶M C·∫¢M!';
        } else {
            className = 'result-box alert alert-success';
            title = '‚úÖ Kh√¥ng c√≥ d·∫•u hi·ªáu tr·∫ßm c·∫£m.';
        }
        if (result.advice && result.advice.length > 0) {
            adviceHtml = '<h6>üßæ G·ª£i √Ω c·∫£i thi·ªán:</h6><ul>';
            result.advice.forEach(item => { adviceHtml += `<li>${item}</li>`; });
            adviceHtml += '</ul>';
        }
        
        resultBox.className = className;
        resultTitle.innerHTML = title;
        resultContent.innerHTML = adviceHtml;

        // 4. L∆∞u k·∫øt qu·∫£ v√†o b·ªô nh·ªõ ƒë·ªám
        tabResults[tabId] = { className, title, content: adviceHtml };
    }

    function displayIndexResult(result, tabId) {
        const className = 'result-box alert alert-primary';
        const title = 'üìä K·∫øt qu·∫£ Ch·ªâ s·ªë';
        const content = `
            <p class="mb-2">K·∫øt qu·∫£ t√≠nh to√°n cho ch·ªâ s·ªë:</p>
            <h5 class="text-primary">${result.index_name}</h5>
            <h2><span class="badge bg-primary">${result.score} / 5</span></h2>
            <p class="mt-3 fst-italic">L∆∞u √Ω: ƒêi·ªÉm c√†ng cao cho th·∫•y m·ª©c ƒë·ªô c·∫£m nh·∫≠n v·ªÅ ch·ªâ s·ªë ƒë√≥ c√†ng l·ªõn.</p>
        `;

        resultBox.className = className;
        resultTitle.innerHTML = title;
        resultContent.innerHTML = content;
        
        // 4. L∆∞u k·∫øt qu·∫£ v√†o b·ªô nh·ªõ ƒë·ªám
        tabResults[tabId] = { className, title, content };
    }
});